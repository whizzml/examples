(log-info "unsupervised-generation: generating unsupervised models...")

(define (set-params dataset params exclude)
  (let (name (str (resource-name dataset) "| unsupervised-gen")
        params (assoc params "name" name)
        excluded (params "excluded_fields" [])
        objective-id (dataset-get-objective-id dataset))
    (if (and exclude objective-id)
      (assoc params "excluded_fields" (append excluded objective-id))
      params)))

(define (try-create-model type dataset params exclude)
  (let (final-params (set-params dataset params exclude))
    (try
     (log-info " - Creating " type)
     (create type dataset final-params)
     (catch e
       (log-warn "Could not create the " type ": " e)))))

(define cluster-id
  (try-create-model "cluster" dataset cluster-params exclude-objective))

(define association-leverage-id
  (let (objective-id (dataset-get-objective-id dataset)
        params (merge association-params
                      {"rhs_predicate" [{"field" objective-id}]
                       "search_strategy" "leverage"}))
    (try-create-model "association" dataset params false)))

(define association-lift-id
  (let (objective-id (dataset-get-objective-id dataset)
        params (merge association-params
                      {"rhs_predicate" [{"field" objective-id}]
                       "search_strategy" "lift"}))
    (try-create-model "association" dataset params false)))

(define anomaly-id
  (try-create-model "anomaly" dataset  anomaly-params exclude-objective))

(define topicmodel-id
  (try-create-model "topic" dataset topic-params exclude-objective))

(define pca-id
  (try-create-model "pca" dataset pca-params exclude-objective))

(log-info "unsupervised-generation: unsupervised models generated")
